# .github/workflows/sync-upstream.yml
name: Sync Upstream

permissions:
  contents: write

on:
  # Run daily at 02:00 UTC
  schedule:
    - cron: '0 2 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
  
  # Run on first push to setup the upstream branch
  push:
    branches:
      - main
    paths:
      - '.github/workflows/sync-upstream.yml'

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch full history to handle tags and branches properly
        fetch-depth: 0
        # Use PAT for write permissions (fallback to GITHUB_TOKEN)
        token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
    
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Add upstream remote
      run: |
        git remote add upstream https://github.com/Mange/rofi-emoji.git || true
        git remote set-url upstream https://github.com/Mange/rofi-emoji.git
    
    - name: Fetch upstream
      run: |
        git fetch upstream
        git fetch upstream --tags
    
    - name: Create or update upstream branch
      run: |
        # Check if upstream branch exists locally
        if git show-ref --verify --quiet refs/heads/upstream; then
          echo "Upstream branch exists locally, switching to it"
          git checkout upstream
        else
          # Check if upstream branch exists on remote
          if git show-ref --verify --quiet refs/remotes/origin/upstream; then
            echo "Upstream branch exists on remote, checking it out"
            git checkout -b upstream origin/upstream
          else
            echo "Creating new upstream branch"
            git checkout -b upstream upstream/master
          fi
        fi
    
    - name: Sync upstream branch with upstream/master
      run: |
        git checkout upstream
        
        # Reset upstream branch to match upstream/master exactly
        git reset --hard upstream/master
        
        echo "Upstream branch synced with upstream/master"
        echo "Latest commit: $(git log -1 --oneline)"
    
    - name: Push upstream branch
      run: |
        git push origin upstream --force-with-lease
    
    - name: Sync tags
      run: |
        # Push all tags from upstream
        git push origin --tags
    
    - name: Check for new commits
      id: check_changes
      run: |
        # Get the hash of the current upstream/master
        UPSTREAM_HASH=$(git rev-parse upstream/master)
        
        # Get the hash of our upstream branch before sync (if it exists on remote)
        if git show-ref --verify --quiet refs/remotes/origin/upstream; then
          OLD_HASH=$(git rev-parse origin/upstream)
        else
          OLD_HASH=""
        fi
        
        echo "upstream_hash=${UPSTREAM_HASH}" >> $GITHUB_OUTPUT
        echo "old_hash=${OLD_HASH}" >> $GITHUB_OUTPUT
        
        if [ "$UPSTREAM_HASH" != "$OLD_HASH" ]; then
          echo "changes_detected=true" >> $GITHUB_OUTPUT
          echo "New changes detected!"
        else
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          echo "No new changes"
        fi
    
    - name: Create summary
      run: |
        echo "## Upstream Sync Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Upstream repository**: https://github.com/Mange/rofi-emoji" >> $GITHUB_STEP_SUMMARY
        echo "- **Synced to branch**: \`upstream\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Latest commit**: \`$(git log -1 --oneline upstream/master)\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Changes detected**: ${{ steps.check_changes.outputs.changes_detected }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Show recent tags
        echo "### Recent Tags" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        git tag --sort=-version:refname | head -5 >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

name: Build and Release rofi-emoji

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag to build (leave empty for latest)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        debian_version: 
          - bookworm
          - trixie  
          - sid
    name: build-${{ matrix.debian_version }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Determine version and tag
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ inputs.tag_name }}" ]; then
          TAG_NAME="${{ inputs.tag_name }}"
        elif [ "${{ github.event_name }}" = "push" ] && [[ "${{ github.ref }}" == refs/tags/* ]]; then
          TAG_NAME="${{ github.ref_name }}"
        else
          git fetch origin upstream:upstream || true
          TAG_NAME=$(git tag --sort=-version:refname | head -1)
        fi
        
        if [ -z "$TAG_NAME" ]; then
          echo "ERROR: No tag found!"
          exit 1
        fi
        
        VERSION=${TAG_NAME#v}
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION from tag: $TAG_NAME"

    - name: Checkout upstream tag
      run: |
        git checkout upstream
        git checkout ${{ steps.version.outputs.tag_name }}
        echo "Checked out tag: ${{ steps.version.outputs.tag_name }}"

    - name: Build package
      run: |
        docker run --rm -v $PWD:/workspace -w /workspace \
          debian:${{ matrix.debian_version }} \
          bash -c "
            set -e
            apt-get update
            apt-get install -y devscripts build-essential
            apt-get install -y autoconf automake libtool-bin libtool pkg-config
            apt-get install -y rofi-dev || apt-get install -y rofi libcairo2-dev libglib2.0-dev libpango1.0-dev
            apt-get install -y libglib2.0-dev libcairo2-dev libpango1.0-dev libxkbcommon-dev libxcb1-dev
            
            # Create source directory and copy files (excluding existing build dirs)
            mkdir -p rofi-emoji-${{ steps.version.outputs.version }}
            find . -maxdepth 1 -name '*.c' -o -name '*.h' -o -name 'configure.*' -o -name 'Makefile.*' -o -name '*.am' -o -name '*.in' -o -name 'src' -o -name 'data' -o -name 'README*' -o -name 'LICENSE*' -o -name 'AUTHORS' -o -name 'COPYING' | xargs -I {} cp -r {} rofi-emoji-${{ steps.version.outputs.version }}/
            
            # Copy debian directory from workspace
            cp -r debian rofi-emoji-${{ steps.version.outputs.version }}/
            cd rofi-emoji-${{ steps.version.outputs.version }}
            
            sed -i '1s/.*/rofi-emoji (${{ steps.version.outputs.version }}-1~${{ matrix.debian_version }}) unstable; urgency=medium/' debian/changelog
            chmod +x debian/rules
            
            autoreconf -fiv
            ./configure --prefix=/usr
            make clean || true
            dpkg-buildpackage -us -uc -b
            
            cd ..
            mkdir -p /workspace/packages/${{ matrix.debian_version }}
            mv *.deb /workspace/packages/${{ matrix.debian_version }}/ || true
            ls -la /workspace/packages/${{ matrix.debian_version }}/
          "
    
    - name: Upload packages
      uses: actions/upload-artifact@v4
      with:
        name: rofi-emoji-${{ matrix.debian_version }}
        path: packages/${{ matrix.debian_version }}/*.deb
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ inputs.tag_name }}" ]; then
          TAG_NAME="${{ inputs.tag_name }}"
        elif [ "${{ github.event_name }}" = "push" ] && [[ "${{ github.ref }}" == refs/tags/* ]]; then
          TAG_NAME="${{ github.ref_name }}"
        else
          TAG_NAME=$(git tag --sort=-version:refname | head -1)
        fi
        
        VERSION=${TAG_NAME#v}
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Download packages
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        path: release-packages
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.tag_name }}
        name: rofi-emoji ${{ steps.version.outputs.version }}
        body: |
          ## rofi-emoji ${{ steps.version.outputs.version }} - Debian Packages
          
          Emoji selector plugin for Rofi. Built from upstream tag ${{ steps.version.outputs.tag_name }}.
          
          ### Installation:
          Download the appropriate `.deb` file:
          - **Debian 12 (Bookworm)**: `rofi-emoji_*~bookworm*_amd64.deb`
          - **Debian 13 (Trixie)**: `rofi-emoji_*~trixie*_amd64.deb`  
          - **Debian Sid**: `rofi-emoji_*~sid*_amd64.deb`
          
          ```bash
          sudo apt install ./rofi-emoji_*.deb
          ```
          
          ### Usage:
          ```bash
          rofi -modi emoji -show emoji
          ```
        files: release-packages/*.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
